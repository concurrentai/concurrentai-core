// Code generated by mockery v2.1.0. DO NOT EDIT.

package mocks

import (
	messaging "github.com/concurrent-ai/rendezvous/src/shared/messaging"
	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Client) Close() {
	_m.Called()
}

// CreateConsumer provides a mock function with given fields: topic, subscriptionName
func (_m *Client) CreateConsumer(topic string, subscriptionName string) messaging.Consumer {
	ret := _m.Called(topic, subscriptionName)

	var r0 messaging.Consumer
	if rf, ok := ret.Get(0).(func(string, string) messaging.Consumer); ok {
		r0 = rf(topic, subscriptionName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(messaging.Consumer)
		}
	}

	return r0
}

// CreateProducer provides a mock function with given fields: topic
func (_m *Client) CreateProducer(topic string) messaging.Producer {
	ret := _m.Called(topic)

	var r0 messaging.Producer
	if rf, ok := ret.Get(0).(func(string) messaging.Producer); ok {
		r0 = rf(topic)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(messaging.Producer)
		}
	}

	return r0
}
